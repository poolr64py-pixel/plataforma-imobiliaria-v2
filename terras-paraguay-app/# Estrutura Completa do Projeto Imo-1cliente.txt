# Estrutura Completa do Projeto Imobiliário White Label

## 📁 Estrutura de Pastas

```
imobiliario-whitelabel/
├── public/
│   ├── index.html
│   ├── favicon.ico
│   ├── manifest.json
│   └── logos/
│       ├── santos.png
│       ├── oliveira.png
│       └── default.png
│
├── src/
│   ├── components/
│   │   ├── Header.js ✅
│   │   ├── SearchSystem.js ✅
│   │   ├── PropertyCard.js ✅
│   │   ├── PropertyModal.js ✅
│   │   ├── ContactForm.js ✅
│   │   └── Footer.js ✅
│   │
│   ├── utils/
│   │   ├── localization.js ✅
│   │   ├── seo.js (criar)
│   │   ├── analytics.js (criar)
│   │   └── api.js (criar)
│   │
│   ├── hooks/
│   │   ├── useLocalStorage.js (criar)
│   │   ├── useTenant.js (criar)
│   │   └── useProperties.js (criar)
│   │
│   ├── contexts/
│   │   ├── TenantContext.js (criar)
│   │   └── PropertiesContext.js (criar)
│   │
│   ├── pages/
│   │   ├── Home.js (criar)
│   │   ├── Properties.js (criar)
│   │   ├── About.js (criar)
│   │   ├── Contact.js (criar)
│   │   └── Blog.js (criar)
│   │
│   ├── data/
│   │   ├── mockProperties.js (criar)
│   │   └── tenantConfigs.js (criar)
│   │
│   ├── styles/
│   │   ├── globals.css (criar)
│   │   └── components.css (criar)
│   │
│   ├── App.js ✅
│   ├── App.css ✅
│   ├── index.js
│   └── index.css
│
├── package.json ✅
├── README.md
└── .env.example
```

## 🚀 Passos para Resolver os Erros

### 1. **Instalar Dependências**
```bash
cd imobiliario-whitelabel/imobiliario-frontend
npm install lucide-react react-router-dom
```

### 2. **Criar Estrutura de Pastas**
```bash
# Criar pastas necessárias
mkdir src/components
mkdir src/utils
mkdir src/hooks
mkdir src/contexts
mkdir src/pages
mkdir src/data
mkdir src/styles
```

### 3. **Mover Arquivos Criados**
Salve os arquivos que criei nos seguintes locais:

- `SearchSystem.js` → `src/components/SearchSystem.js`
- `localization.js` → `src/utils/localization.js`
- `App.js` (corrigido) → `src/App.js`
- `Header.js` → `src/components/Header.js`
- `PropertyCard.js` → `src/components/PropertyCard.js`
- Componentes restantes → `src/components/`

### 4. **Criar index.js Principal**
```javascript
// src/index.js
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

reportWebVitals();
```

### 5. **Criar index.css Base**
```css
/* src/index.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}
```

## 🔧 Arquivos Adicionais a Criar

### 1. **src/data/mockProperties.js**
```javascript
export const mockProperties = [
  {
    id: 1,
    title: 'Apartamento Moderno Vila Madalena',
    price: 450000,
    pricePerM2: 7500,
    marketComparison: 5,
    location: 'Vila Madalena, São Paulo - SP',
    area: 65,
    rooms: 2,
    bathrooms: 1,
    parking: 1,
    type: 'apartment',
    purpose: 'sale',
    tags: ['Novo', 'Destaque'],
    images: [
      'https://images.unsplash.com/photo-1522708323590-d24dbb6b0267?w=800&h=600&fit=crop'
    ],
    description: 'Apartamento completamente reformado em uma das regiões mais valorizadas de São Paulo.',
    features: ['Área de lazer completa', 'Portaria 24h', 'Churrasqueira', 'Academia']
  },
  // ... mais imóveis
];
```

### 2. **src/data/tenantConfigs.js**
```javascript
export const tenantConfigs = {
  'Imobiliária Santos': {
    id: 'santos',
    name: 'Imobiliária Santos',
    logo: '/logos/santos.png',
    colors: {
      primary: '#1e40af',
      secondary: '#64748b'
    },
    domain: 'imobiliariasantos.com.br',
    contact: {
      phone: '+55 11 99999-9999',
      email: 'contato@imobiliariasantos.com.br',
      address: 'Rua Augusta, 1234 - São Paulo, SP'
    }
  },
  // ... mais tenants
};
```

### 3. **src/utils/seo.js**
```javascript
export const updateMetaTags = (property, tenant) => {
  // Implementação das meta tags SEO
  const title = property 
    ? `${property.title} - ${tenant.name}`
    : `${tenant.name} - Imóveis em São Paulo`;
    
  document.title = title;
  
  // ... resto da implementação SEO
};

export const generateStructuredData = (property) => {
  // Schema.org structured data
};
```

### 4. **.env.example**
```env
REACT_APP_API_URL=http://localhost:3001
REACT_APP_GOOGLE_MAPS_KEY=your_google_maps_key
REACT_APP_ANALYTICS_ID=your_analytics_id
REACT_APP_TENANT_ID=santos
```

## 📝 Scripts de Package.json

Certifique-se de que seu `package.json` tem estes scripts:

```json
{
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "build:santos": "REACT_APP_TENANT_ID=santos npm run build",
    "build:oliveira": "REACT_APP_TENANT_ID=oliveira npm run build"
  }
}
```

## 🎯 Ordem de Implementação

1. ✅ **Criar estrutura de pastas**
2. ✅ **Instalar dependências** (`lucide-react`, `react-router-dom`)
3. ✅ **Copiar componentes criados** para as pastas corretas
4. ✅ **Criar arquivos de dados** (mockProperties, tenantConfigs)
5. ✅ **Testar aplicação** com `npm start`
6. 🔄 **Implementar SEO avançado**
7. 🔄 **Conectar APIs reais**
8. 🔄 **Deploy multi-tenant**

## 🚨 Comandos para Executar Agora

```bash
# 1. Navegar para o projeto
cd imobiliario-whitelabel/imobiliario-frontend

# 2. Instalar dependências
npm install lucide-react react-router-dom

# 3. Criar estrutura de pastas
mkdir -p src/{components,utils,hooks,contexts,pages,data,styles}

# 4. Iniciar desenvolvimento
npm start
```

Após fazer essas alterações, o projeto deve funcionar sem erros! 🎉